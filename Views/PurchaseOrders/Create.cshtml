@model UtopiaCatering.Models.PurchaseOrder
@{
    ViewData["Title"] = "Create Purchase Order";
}

<h2>Create Purchase Order</h2>

<form asp-action="Create">
    <div class="form-group">
        <label asp-for="VendorID" class="control-label"></label>
        <select asp-for="VendorID" class="form-control" asp-items="ViewBag.VendorID"></select>
    </div>

    <div class="form-group">
        <label asp-for="GrossAmount" class="control-label"></label>
        <input asp-for="GrossAmount" class="form-control" id="gross-amount" readonly />
    </div>

    <div class="form-group">
        <label asp-for="Discount" class="control-label"></label>
        <input asp-for="Discount" class="form-control" id="discount" />
    </div>

    <div class="form-group">
        <label asp-for="PaidAmount" class="control-label"></label>
        <input asp-for="PaidAmount" class="form-control" id="paid-amount" />
    </div>

    <div class="form-group">
        <label asp-for="Due" class="control-label"></label>
        <input asp-for="Due" class="form-control" id="due-amount" readonly />
    </div>

    <h4>Order Details</h4>
    <table class="table" id="order-details">
        <thead>
            <tr>
                <th>Item</th>
                <th>Unit</th>
                <th>Quantity</th>
                <th>Rate</th>
                <th>Total</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
        </tbody>
    </table>

    <button type="button" id="add-detail" class="btn btn-secondary">Add Detail</button>
    <br /><br />
    <input type="submit" value="Create" class="btn btn-primary" />
</form>

@section Scripts {
    <script>
        document.getElementById('add-detail').addEventListener('click', function () {
            const tableBody = document.querySelector('#order-details tbody');

            const newRow = document.createElement('tr');
            newRow.innerHTML = `
                <td>
                    <select name="purchaseOrderDetails[0].ItemID" class="form-control">
        @foreach (var item in ViewBag.ItemID)
        {
                                <option value="@item.Value">@item.Text</option>
        }
                    </select>
                </td>
                <td>
                    <input name="purchaseOrderDetails[0].Unit" class="form-control" />
                </td>
                <td>
                    <input name="purchaseOrderDetails[0].Quantity" class="form-control quantity" type="number" />
                </td>
                <td>
                    <input name="purchaseOrderDetails[0].Rate" class="form-control rate" type="number" step="0.01" />
                </td>
                <td>
                    <input class="form-control total" type="number" readonly />
                </td>
                <td>
                    <button type="button" class="btn btn-danger remove-detail">Remove</button>
                </td>`;

            tableBody.appendChild(newRow);
            updateIndexes();
            attachRowEvents(newRow);
        });

        document.getElementById('order-details').addEventListener('click', function (event) {
            if (event.target.classList.contains('remove-detail')) {
                event.target.closest('tr').remove();
                calculateGrossAmount();
            }
        });

        document.getElementById('discount').addEventListener('input', updateDueAmount);
        document.getElementById('paid-amount').addEventListener('input', updateDueAmount);

        function updateIndexes() {
            const rows = document.querySelectorAll('#order-details tbody tr');
            rows.forEach((row, index) => {
                row.querySelectorAll('input, select').forEach(input => {
                    const name = input.getAttribute('name');
                    if (name) {
                        input.setAttribute('name', name.replace(/\d+/, index));
                    }
                });
            });
        }

        function attachRowEvents(row) {
            const quantityInput = row.querySelector('.quantity');
            const rateInput = row.querySelector('.rate');
            const totalInput = row.querySelector('.total');

            function updateRowTotal() {
                const quantity = parseFloat(quantityInput.value) || 0;
                const rate = parseFloat(rateInput.value) || 0;
                totalInput.value = (quantity * rate).toFixed(2);
                calculateGrossAmount();
            }

            quantityInput.addEventListener('input', updateRowTotal);
            rateInput.addEventListener('input', updateRowTotal);
        }

        function calculateGrossAmount() {
            let grossAmount = 0;
            document.querySelectorAll('#order-details .total').forEach(totalInput => {
                grossAmount += parseFloat(totalInput.value) || 0;
            });
            document.getElementById('gross-amount').value = grossAmount.toFixed(2);
            updateDueAmount();
        }

        function updateDueAmount() {
            const grossAmount = parseFloat(document.getElementById('gross-amount').value) || 0;
            const discount = parseFloat(document.getElementById('discount').value) || 0;
            const paidAmount = parseFloat(document.getElementById('paid-amount').value) || 0;

            const dueAmount = grossAmount - discount - paidAmount;
            document.getElementById('due-amount').value = dueAmount.toFixed(2);
        }
    </script>
}